#!/usr/bin/env ruby

$:.unshift File.dirname(__FILE__)

require 'optparse'
require 'functions'
require 'probe'


OptionParser.new do |opts|
  opts.banner = "Usage: scythe [options]"

  opts.on("-g", 
          "--gather <project-directory>", 
          "gather probes from source code directory") do |dir|


    unless dir && File.directory?(dir) 
      STDERR.puts "scythe: -g option requires a valid directory argument"
      exit(1)
    end

    project_dir = File.expand_path(dir) 

    probe_markers =
      file_names(project_dir).grep(/\.rb$/)
                             .flat_map {|fn| markers(fn) }

    duplicated_markers =
      probe_markers.group_by {|m| m }
                   .select {|_,ms| ms.count >= 2 }
                   .keys

    unless duplicated_markers.empty?
      STDERR.puts "scythe: the following markers found more than once in #{project_dir}:\n"
      STDERR.puts "\n#{duplicated_markers.join($/)}\n\n" 
      exit(1)
    end

    probe_markers.uniq.each do |marker|
      record_marker(marker)
    end
  end


  opts.on("-s",
          "--status",
          "show status of probes") do 


    unless marker_env_var && File.directory?(marker_env_var)
      STDERR.puts "scythe: environment variable SCYTHE_MARKER_DIR not set"
      exit(1)
    end

    now = Time.now.to_i

    probes = 
      file_names(marker_dir).grep(MARKER_EXT_PATTERN)
                            .map {|fn| Probe.read(fn) }

    probes.map {|probe| [probe.name, probe.days_silent?(now)]}
          .sort_by {|name,days| [-days,name] }
          .each do |name,days|
            puts "%-20s %3d" % [name,days]
          end
    
  end

end.parse!



